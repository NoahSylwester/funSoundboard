{"version":3,"sources":["sounds/airhorn/414208__jacksonacademyashmore__airhorn.wav","sounds/cartoon-xylophone-gliss/cartoon-xylophone-gliss.mp3","sounds/cricket-chirp-in-the-night/Cricket-chirp-in-the-night.mp3","sounds/deer-call-sound/Deer-call-sound.mp3","sounds/piano-sound/piano-sound.mp3","sounds/rimshot-sound/rimshot-sound.mp3","sounds/wah-wah-wah-sound-effect/wah-wah-wah-sound-effect.mp3","sounds/wilhelm/64940__syna-max__wilhelm-scream.wav","sounds/scratch/160907__raccoonanimator__cue-scratch.wav","sounds/laughter/371562__kinoton__sitcom-laughter-with-applause-small-audience.wav","sounds/applause/440116__processaurus__s-short-applause.wav","sounds/yay/1_person_cheering-Jett_Rifkin-1851518140.mp3","sounds/drama/76061__digifishmusic__dramatic5.wav","sounds/bells/tolling-bell_daniel-simion.mp3","sounds/fart/Fart-Common-Everyday-Fart_Mike-Koenig.mp3","sounds/horn/392180__kirmm__battle-horn-1.wav","sounds/coin/341695__projectsu012__coins-1.wav","logo.svg","components/Sound/Sound.js","components/Board/Board.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Sound","props","className","onClick","sound","play","name","event","stopPropagation","stop","sounds","airhorn","xylophone","crickets","deer","piano","rimshot","wah","wilhelm","scratch","laughter","applause","yay","drama","bells","fart","horn","coin","Board","state","soundIds","Object","keys","slice","map","key","Howl","src","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,oE,gBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,wD,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,sD,gBCA3CD,EAAOC,QAAU,IAA0B,6D,gBCA3CD,EAAOC,QAAU,IAA0B,kE,gBCA3CD,EAAOC,QAAU,IAA0B,2F,gBCA3CD,EAAOC,QAAU,IAA0B,oE,gBCA3CD,EAAOC,QAAU,IAA0B,sE,gBCA3CD,EAAOC,QAAU,IAA0B,6D,gBCA3CD,EAAOC,QAAU,IAA0B,wD,gBCA3CD,EAAOC,QAAU,IAA0B,mE,gBCA3CD,EAAOC,QAAU,IAA0B,0D,gBCA3CD,EAAOC,QAAU,IAA0B,2D,yECA3CD,EAAOC,QAAU,IAA0B,kC,8LCgB5BC,MAbf,SAAeC,GACX,OACI,0BAAMC,UAAU,QAAQC,QAAS,kBAAMF,EAAMG,MAAMC,SAC/C,4BACKJ,EAAMK,MAEX,4BAAQH,QAAS,SAACI,GAAYA,EAAMC,kBAAmBP,EAAMG,MAAMK,SAAnE,U,6SCeNC,EAAS,CACXC,YACAC,cACAC,aACAC,SACAC,UACAC,YACAC,QACAC,YACAC,YACAC,aACAC,aACAC,QACAC,UACAC,UACAC,SACAC,SACAC,UA0BWC,E,YArBX,aAAe,IAAD,8BACV,+CACKC,MAAQ,CACTC,SAAU,IAHJ,E,sEAOV,OACI,yBAAK5B,UAAU,SACX,8CACA,yBAAKA,UAAU,kBACX,6BAAM6B,OAAOC,KAAKtB,GAAQuB,MAAM,EAAE,GAAGC,KAAI,SAACC,GAAD,OAAS,kBAAC,EAAD,CAAO7B,KAAM,CAAC6B,GAAM/B,MAAO,IAAIgC,OAAK,CAAEC,IAAK3B,EAAOyB,WACpG,6BAAMJ,OAAOC,KAAKtB,GAAQuB,MAAM,EAAE,GAAGC,KAAI,SAACC,GAAD,OAAS,kBAAC,EAAD,CAAO7B,KAAM,CAAC6B,GAAM/B,MAAO,IAAIgC,OAAK,CAAEC,IAAK3B,EAAOyB,WACpG,6BAAMJ,OAAOC,KAAKtB,GAAQuB,MAAM,EAAE,IAAIC,KAAI,SAACC,GAAD,OAAS,kBAAC,EAAD,CAAO7B,KAAM,CAAC6B,GAAM/B,MAAO,IAAIgC,OAAK,CAAEC,IAAK3B,EAAOyB,WACrG,6BAAMJ,OAAOC,KAAKtB,GAAQuB,MAAM,GAAG,IAAIC,KAAI,SAACC,GAAD,OAAS,kBAAC,EAAD,CAAO7B,KAAM,CAAC6B,GAAM/B,MAAO,IAAIgC,OAAK,CAAEC,IAAK3B,EAAOyB,iB,GAftGG,aChCLC,MARf,WACE,OACE,yBAAKrC,UAAU,OACb,kBAAC,EAAD,QCIcsC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e80544f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/414208__jacksonacademyashmore__airhorn.8fb4c35a.wav\";","module.exports = __webpack_public_path__ + \"static/media/cartoon-xylophone-gliss.f851c5fe.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Cricket-chirp-in-the-night.ec0826b6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Deer-call-sound.7f6c3ed6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/piano-sound.b1dff40f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/rimshot-sound.279c3905.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wah-wah-wah-sound-effect.44afdfdc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/64940__syna-max__wilhelm-scream.6c632c3a.wav\";","module.exports = __webpack_public_path__ + \"static/media/160907__raccoonanimator__cue-scratch.fe88352c.wav\";","module.exports = __webpack_public_path__ + \"static/media/371562__kinoton__sitcom-laughter-with-applause-small-audience.9728a1c6.wav\";","module.exports = __webpack_public_path__ + \"static/media/440116__processaurus__s-short-applause.6882998c.wav\";","module.exports = __webpack_public_path__ + \"static/media/1_person_cheering-Jett_Rifkin-1851518140.c597f127.mp3\";","module.exports = __webpack_public_path__ + \"static/media/76061__digifishmusic__dramatic5.569a1581.wav\";","module.exports = __webpack_public_path__ + \"static/media/tolling-bell_daniel-simion.93fe1910.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Fart-Common-Everyday-Fart_Mike-Koenig.7341877e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/392180__kirmm__battle-horn-1.651de925.wav\";","module.exports = __webpack_public_path__ + \"static/media/341695__projectsu012__coins-1.4a4fff94.wav\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport './index.css'\n\nfunction Sound(props) {\n    return (\n        <span className=\"sound\" onClick={() => props.sound.play()}>\n            <h3>\n                {props.name}\n            </h3>\n            <button onClick={(event) => { event.stopPropagation(); props.sound.stop() }}>\n                Stop\n                </button>\n        </span>\n    )\n}\n\nexport default Sound;","import React, { Component } from 'react';\nimport Sound from '../Sound/Sound';\nimport { Howl } from 'howler';\nimport './index.css';\n\nimport airhorn from '../../sounds/airhorn/414208__jacksonacademyashmore__airhorn.wav';\nimport xylophone from '../../sounds/cartoon-xylophone-gliss/cartoon-xylophone-gliss.mp3';\nimport crickets from '../../sounds/cricket-chirp-in-the-night/Cricket-chirp-in-the-night.mp3';\nimport deer from '../../sounds/deer-call-sound/Deer-call-sound.mp3';\nimport piano from '../../sounds/piano-sound/piano-sound.mp3';\nimport rimshot from '../../sounds/rimshot-sound/rimshot-sound.mp3';\nimport wah from '../../sounds/wah-wah-wah-sound-effect/wah-wah-wah-sound-effect.mp3';\nimport wilhelm from '../../sounds/wilhelm/64940__syna-max__wilhelm-scream.wav';\nimport scratch from '../../sounds/scratch/160907__raccoonanimator__cue-scratch.wav';\nimport laughter from '../../sounds/laughter/371562__kinoton__sitcom-laughter-with-applause-small-audience.wav';\nimport applause from '../../sounds/applause/440116__processaurus__s-short-applause.wav';\nimport yay from '../../sounds/yay/1_person_cheering-Jett_Rifkin-1851518140.mp3';\nimport drama from '../../sounds/drama/76061__digifishmusic__dramatic5.wav';\nimport bells from '../../sounds/bells/tolling-bell_daniel-simion.mp3';\nimport fart from '../../sounds/fart/Fart-Common-Everyday-Fart_Mike-Koenig.mp3';\nimport horn from '../../sounds/horn/392180__kirmm__battle-horn-1.wav';\nimport coin from '../../sounds/coin/341695__projectsu012__coins-1.wav';\n\n\nconst sounds = {\n    airhorn,\n    xylophone,\n    crickets,\n    deer,\n    piano,\n    rimshot,\n    wah,\n    wilhelm,\n    scratch,\n    laughter,\n    applause,\n    yay,\n    drama,\n    bells,\n    fart,\n    horn,\n    coin,\n };  \n\n\nclass Board extends Component {\n    constructor() {\n        super();\n        this.state = {\n            soundIds: [],\n        };\n    }\n    render() {\n        return (\n            <div className=\"Board\">\n                <h1>Sounds for Tim</h1>\n                <div className=\"soundContainer\">\n                    <div>{Object.keys(sounds).slice(0,4).map((key) => <Sound name={[key]} sound={new Howl({ src: sounds[key]})} />)}</div>\n                    <div>{Object.keys(sounds).slice(4,8).map((key) => <Sound name={[key]} sound={new Howl({ src: sounds[key]})} />)}</div>\n                    <div>{Object.keys(sounds).slice(8,12).map((key) => <Sound name={[key]} sound={new Howl({ src: sounds[key]})} />)}</div>\n                    <div>{Object.keys(sounds).slice(12,16).map((key) => <Sound name={[key]} sound={new Howl({ src: sounds[key]})} />)}</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Board;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Board from './components/Board/Board';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}